/*
Autor: Eduardo Yamauchi - 619485
-> View cuidaCompleto: A view tem o intuito de retornar uma visão unificada de todas as tabelas
relacionadas a uma agregação entre Cuidador e Paciente
-> Procedure insert_cuidaCompleto: No MySQL, não existe a trigger "instead of". Portanto, para fazer 
inserção em uma view complexa, tem que se fazer uma procedure
-> Procedure delete_cuidaCompleto: No MySQL, não existe a trigger "instead of". Portanto, para fazer 
deleção em uma view complexa, tem que se fazer uma procedure
*/

/*
Autor: Pedro Mauad - 619736
-> Inserção de Valores nas Tabelas para teste das Views
-> View atendimentoMedico: View com o objetivo de retornar uma visão unificada de todos atributos importantes
de tabelas relacionadas com a entidade Atendimento. As tabelas relacionadas são:Pessoa, Paciente, Médico.
-> View insere_atendimentoMedico: View com o objetivo de possibilitar uma inserção na view atendimentoMedico.
-> Procedure insereAtendimento: Procedure para inserir dados na Tabela Atendimento
-> Procedure atualizaAtendimento: Procedure para atualizar dados na Tabela Atendimento
-> Procedure removeAtendimento: Procedure para remover dados da Tabela Atendimento
-> Procedure insert_atendimentoMedico: Não existe trigger "instead of" no MySQL. Logo, deve-se criar um procedimento
para fazer inserção em uma view que use mais de uma tabela.
-> Procedure delete_atendimentoMedico: Não existe trigger "instead of" no MySQL. Logo, deve-se criar um procedimento
para fazer a remoção em uma view que use mais de uma tabela.
*/

/*
Autor: Lucas Gouveia, RA 489050
-> Procedure DadosExame:A procedure retorna os dados dos exames realizados de um paciente
-> Inserção de Dados em Exame
-> View viewExame: retorna todas as infos de exame
*/

/*
Autor: Rodolfo Zampieri, RA: 380350
-> Procedure insere_HorarioCuida: No MySQL o trigger "instead of" não existe, portanto, 
para realizar uma inserção em uma view é necessário utilizar procedure. Este trigger insere um novo Horário para um determinado cuidador.
-> Procedure insere_IntercorrenciaCuida: No MySQL o trigger "instead of" não existe, portanto,
para realizar uma inserção em uma view é necessário utilizar procedure. Este trigger insere uma nova intercorrencia, com descrição e id da intercorrência.
-> Function c_Id: serve para mostrar a descricao de uma intercorrencia a partir de intercorrenciaNro
*/

/*
Autor: Juliano Lanssarini - 489093
-> Inserção dados na tabela Consulta
-> Inserção dados na tabela Medicamentos
-> Procedure para inserção de dados em Medicamentos
-> Criando uma VIEW para as Consultas e seus respectivos medicamentos
-> Procedure com cursor para contar quantas consultas teve determinado paciente
*/

/*
Autor: Guilherme H C de Moraes - 573671

-> View para mostrar as informacoes dos familiares
-> View para mostrar as informacoes dos nao familiares
-> Mostra dD do familiar, atributo que é utilizado em outras tabelas, mas depois fiz uma Function para retornar o Id a partir do CPF
-> Mostra Id do nao familiar, atributo que é utilizado em outras tabelas, mas depois fiz uma Function para retornar o Id a partir do CPF 
-> Function para mostrar o id de familiar a partir de seu cpf
-> Function para mostrar o id de nao familiar a partir de seu cpf
-> Function para inserir em Familiar, verificando se o familiar e o paciente estao cadastrados na tabela Pessoa
-> Function para inserir em naoFamiliar, verificando se o nao-familiar e o paciente estao cadastrados na tabela Pessoa
-> Function que retorna o nome dos familiares a partir do cpf do paciente
-> Function que retorna o nome dos nao familiares a partir do cpf do paciente
-> Trigger para comparar se os CPFs inseridos nao sao iguais, de paciente e familiar, na tabela familiar, antes de adicionar
-> Trigger para comparar se os CPFs inseridos nao sao iguais, de paciente e nao-familiar, na tabela naoFamiliar, antes de adicionar
*/

/*
Autor: Thiago Bretas(551899)

-> Inserção de valores na tabela Informal
-> Criação de view para mostrar os dados do informal
-> Criação de view, através de um procedure, para listar os informais que também são pacientes 
-> Criação de view, através de um procedure, para listar os informais que também são familiares
-> Function para mostrar o ID de um Informal a partir de seu cpf
*/ 

/*
Autor: Frankson Teotonho de Sousa RA: 619540

-> View para consulta com todos os dados de uma anamnese de um paciente
-> View para a consulta, inserção ou exclusão de uma anamnese completa
-> Procedure com a inserção de uma anamnese completa
-> Procedure com a exclusao de uma anamnese completa
*/

/*
Autor: Paulo Vitor Tostes Betareli 	RA:587648

-> Inserts em examesSolicitados
-> trigger DataDisponivel que verifica se há data disponível para o agendamento do exame
-> view que consulta exames solicitados em uma consulta
-> INSERT DENTRO DA TEBELA NAOCONSANGUINEO
-> trigger que verifica antes de inserir na tabela examesolicitados se a data do exame já não está ocupado por outro exame
-> trigger que verifica antes de inserir na tabela examesolicitados se a data de agendamento do exame é válida, ou seja, se é uma data pra frente da data atual
-> view que traz todas as informações da tabela exames solicitados ordenada pelo nome do exame
-> procedure que insere dados na view da tabela exames_solicitados
-> view que traz todas as informações da tabela naoconsanguineo ordenado por parentesco
-> insert dentro da tebela naoconsanguineo
-> procedure que insere dados na tabela nãoconsanguineo
*/

/*
 Autor: Régis Zangirolami, 386227

-> Insert Medico (mais Pessoa como teste)
-> Procedure insertMedico: O procedimento insere um novo médico.
-> Function getEmailMedico: A função obtém o e-mail de um dado médico.
-> View medicosView: A view lista os médicos registrados ordenando por especialidade e nome.
-> Insert Edita (mais Paciente e Anamnese como teste)
-> Procedure insertEdicao: O procedimento insere a relação de edição da anamnese de um paciente por um médico.
-> Function getMedicosAnamnese: a função obtém a quantidade de médicos responsáveis por uma dada anamnese.
-> View editaAnamneseView: A view lista as relações de edição da anamnese de um paciente por um médico ordenando por cpf do paciente.
*/

/*
 Igor Bianchi 558400

-> insert plano de saude
-> insert serviços
-> view para ver os serviços de acordo com os planos de saude
-> Gera novos id para serviços
-> Gera erro se campo valorAtual da tabela  Servicos for negativo
-> Gera erro se campo valorContratado da tabela  Servicos for negativo
-> Gera erro se campo valorAtual da tabela  Servicos for negativo
-> Gera erro se campo valorContratado da tabela  Servicos for negativo
-> triggers para verificar se as datas de contratação e de alteração de valor são validas
-> criar novo plano de saúde
-> procedimento para atualizar os valores de serviços
-> função para deletar um serviço, primeiro verificando se ele existe
-> função que deleta um plano de saúde levando em conta primeiro as chaves estrangeiras
*/

/*
Nome: João Vieira da Silva Neto	RA:610054
Grupo: 3D

-> Alimentação
-> insert pessoa
-> insert paciente
-> insert vinculado
-> view vPlanoPaciente
-> trigger t_i_VincNegativo: Gera erro se campo valor da tabela Vinculado for negativo
-> trigger t_i_ServAtualContratNegativo: Gera erro se campo valorAtual  for maior que o valorContratado na tabela  Servicos for negativo
-> trigger t_u_VincNegativo: Gera erro se campo valor da tabela Vinculado for negativo
-> trigger t_u_ServAtualContratNegativo: Gera erro se campo valorAtual  for maior que o valorContratado na tabela  Servicos for negativo
-> procedure novo_vinculo: 
-> procedure mostra_planos_contratados: retorna todos os planos contratados e seus pacientes de um plano de saude
-> procedure deletaVinculo: procedimento para excluir um vinculo 
-> procedure atualizaValorVinculado: procedimento para atualizar os valores do vinculo
-> procedure atualizaContratoVinculo: procedimento para atualizar a cobertura do contrato
-> function totalMensal: função que retorna o total pago por mes em planos de saude
*/

/*
Guilherme Silva Correa Lemos RA:587010
-> insercoes alteraAnamnese
-> trigger _before_insert_altera_anam_idAna: verifica se o idAnamnese inserido existe
-> trigger _before_insert_altera_anam_codCat: verifica se o CodigoCategoria inserido existe
-> procedure insertAltera: O procedimento insere a relação de alteração da anamnese
*/

/* 
Autor: Lucas Eduardo Pessoa - RA: 551864
-> Inserção de dados do paciente
-> trigger: paciente_existe: Criação de trigger para verificar se o paciente existe
-> trigger: consanguineo_existe: Criação de trigger para verificar se o consanguineo existe
-> view v_ConsangInfo: recuperar dados de consanguineo
-> view v_Profissional: para mostrar Profissionais (Pessoas) e todos os dados
-> view v_Paciente: para mostrar Profissionais (Pessoas) e todos os dados
-> procedure verificaConsang: verifica se a pessoa é consanguinea ou nao
-> procedure insereConsanguineo: para inserir Consanguineo
-> procedure deletaConsanguineo: para apagar Consanguineo
-> procedure insereProfissional: para inserir Profissional
-> procedure deletaProfissional: para apagar Profissional
-> procedure inserePaciente: para inserir Paciente
-> procedure deletaPaciente: para apagar Paciente
-> function mostraConsanguineos: mostra as pessoas Consanguineas relacionada ao respectivo familiar
-> trigger: t_profissional_existe: bloqueia inserção de profissional se um já existir
-> cursor: cur_CuidPacientes criado através de uma procedure para contar quantos cuidadores o paciente possui
*/

/* Autor: Gustavo do Carmo Braghim | RA: 489182
-> Script para inserção de dados em pessoa
-> view pessoaCuidador: para mostrar Cuidadores (Pessoas) e todos os dados
-> trigger cuidador_existe: para verificar se cuidador ja existe
-> procedure deletaCuidador: para apagar cuidador
*/
